--http://lua-users.org/wiki/SplitJoin

--  CONTAINS
function contains(string, keyword)
    return string.find(string, keyword)
end

--  JOIN
--  Concat the contents of the parameter list,
--  separated by the string delimiter (just like in perl)
--  example: join({"Anna", "Bob", "Charlie", "Dolores"},", ")
function join(list, delimiter)
   local len = table.getn(list)
   if len == 0 then
      return "" 
   end
   local string = list[1]
   for i = 2, len do 
      string = string .. delimiter .. list[i] 
   end
   return string
end

--  SPLIT
--  Compatibility: Lua-5.1
--  Example: Split a file path string into components.
--      function split_path(str)
--          return split(str,'[\\/]+')
--      end
--  parts = split_path("/usr/local/bin")
--  --> {'usr','local','bin'}
function split(str, pat)
   --local t = {}  -- NOTE: use {n = 0} in Lua-5.0
   local t = {n = 0}
   local fpat = "(.-)" .. pat
   local last_end = 1
   local s, e, cap = str:find(fpat, 1)
   while s do
      if s ~= 1 or cap ~= "" then
         table.insert(t, cap)
      end
      last_end = e+1
      s, e, cap = str:find(fpat, last_end)
   end
   if last_end <= #str then
      cap = str:sub(last_end)
      table.insert(t, cap)
   end
   return t
end

--  REMOVE VOWELS
--  https://rosettacode.org/wiki/Remove_vowels_from_a_string
--  local testStr = "The quick brown fox jumps over the lazy dog"
--  print(removeVowels(testStr))
function removeVowels (str)
    local outStr, letter = ""
    local vowels = "AEIUOaeiou"
    local max = #str
    if max > 10 then
        max = 10
    end
    
    for pos = 1, max do
        local letter = str:sub(pos, pos)
        print("letter: "..letter)
        if vowels:find(letter) then
            -- This letter is a vowel
        else
            outStr = outStr .. letter
        end
    end
    return outStr
end
