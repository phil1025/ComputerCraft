-- 1. check git for updates
-- 2. loads APIS
-- 3. other..
-- 4. goes into runtime

-- Variables  **********************************
    
	version = "1.0.0"
	directory = nil
    running = true
	
	local gui = nil
	local apiMgr = nil
	
-- Functions ***********************************
		
	local function splitString(name, sep)
		local elements = {}
		local index = 1
		for e in string.gmatch(name, "[^%"..sep.."]+") do
			elements[index] = e
			index = index + 1
		end
		return elements
	end
	
	--[[
	local function getOsDirectory()
		local osD = nil
		local d = shell.dir()
		shell.setDir(shell.getRunningProgram())
		shell.run("cd ..")
		osD = shell.dir()
		shell.setDir(d)
		return osD.."/"
	end
	--]]

	local function getOsDirectory()
		local workDir = ""
		local progPath = shell.getRunningProgram()
		local elements = splitString(progPath, "/")
		for i = 1, (#elements - 1) do
			workDir = workDir..elements[i].."/"
		end
		return workDir
	end

	local function loadAPIs()
		-- finds dir "../APIs/" and runs "apiManager.run"
		local apiDir = ""
		local progPath = shell.getRunningProgram()
		local elements = splitString(progPath, "/")
		local pathSet = false
		for i = 1, #elements do
			apiDir = apiDir..elements[i].."/"
			local subs = fs.list(apiDir)
			for n = 1, #subs do
				print(" -sub: "..subs[n])
				if subs[n] == "APIs" then
					apiDir = apiDir..subs[n].."/"
					pathSet = true
					break
				end
			end
			if pathSet then
				break
			end
		end
		shell.run(apiDir.."apiManager.run")
	end
	
	local function loadGUI()
		-- atm only gui_adv
		-- later loads other GUIs aswell => normal computer / turtle GUI
		local guiDir = directory.."_guis/gui_adv/gui_adv"
		os.loadAPI(guiDir)
		gui = gui_adv
		local imgDir = directory.."_images/"
		gui.init(imgDir)
	end
	
	local runTime = function()
		while running do
			-- NOTE: mouse_click event might also only work with Advanced Computers!
			--		 doesnÂ´t need only different GUIs, but also runtime!
			event, button, x, y = os.pullEvent("mouse_click")
			if event =="mouse_click" then
				gui.onClickEvent(event, button, x, y)
			end
		end
	end
	
	local init = function()
		print("Starting cOS...")
		directory = getOsDirectory()
		loadAPIs()
		sleep(2)
		print("finalizing...")
		sleep(0.2)
		loadGUI()
		runTime()
	end
	
	local stop = function() --exit OS
		running = false
		gui.stop()
	end
	
-- Main Stuff  *********************************

	init()